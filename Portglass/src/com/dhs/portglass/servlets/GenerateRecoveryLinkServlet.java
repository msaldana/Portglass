package com.dhs.portglass.servlets;

import java.io.IOException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.dhs.portglass.services.AccountManager;
import com.dhs.portglass.services.MailManager;
import com.dhs.portglass.services.ThreadPoolManager;

/**
 * Servlet implementation class recovery
 */
@WebServlet("/recovery")
public class GenerateRecoveryLinkServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;



	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public GenerateRecoveryLinkServlet() {
		super();
		// TODO Auto-generated constructor stub
	}



	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 * This method is invoked by a client side request. It will verify that the input parameters
	 * are not empty or null. If one of these conditions is true, it will forward the response to
	 * an Error Page that details that the parameter was empty. On the other hand, if the parameter
	 * is buffered with a non-blank character, an account recovery link will be generated by passing
	 * the email parameter to the generateAccountRecoveryLink() method of the AccountManager. An 
	 * email will be sent to the provided email address with the corresponding recovery link. 
	 * Finally, the client is forwarded to an error page if any error is encountered, otherwise to 
	 * a success page. 
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException 
			{
		//Initially set to Error page.
		String forwardURL = "./error.jsp";


		if(nullChecker(request.getParameter("email")))
		{
			//Include error message: Empty parameter.
			
		}

		else
		{
			//Create a new Account Recovery Link
			String email = request.getParameter("email");
			String url;
			url = AccountManager.getInstance().generateRecoveryLink(email);
			
			//Send Email 
			ThreadPoolManager.getInstance().getThreadPoolExecutor().execute(
					MailManager.getInstance().sendAsyncPasswordRecoveryEmail(email, url));
			


			//Forward User to Success Page
			forwardURL = "./success.jsp";
			RequestDispatcher dispatcher = request.getRequestDispatcher(forwardURL);
			dispatcher.forward(request, response);
		}

			}

	/**
	 * Verifies if the ID parameter is not defined. It returns a boolean which will be
	 * picked up on the doPost(request, response) method and forwarded to the error 
	 * page if true.
	 * @param requestParam An URL parameter
	 * @return Contents of the parameter
	 */
	private static boolean nullChecker(Object requestParam)
	{
		return (requestParam==null);

	}

}
